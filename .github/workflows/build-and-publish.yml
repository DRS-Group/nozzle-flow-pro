name: Build and Publish Electron ARM64

on:
  push:
    branches: [release]

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout the private repository
      - uses: actions/checkout@v4

      # 2️⃣ Setup Node.js
      - uses: actions/setup-node@v4
        with:
          node-version: 22

      # 3️⃣ Install dependencies
      - run: npm ci
        working-directory: ./app

      # 4️⃣ Build the Electron app for Linux ARM64
      - run: npx electron-forge make --platform linux --arch arm64
        working-directory: ./app

      # 5️⃣ List all .deb files recursively (for debugging)
      - name: List all .deb files recursively
        run: |
          echo "Searching for .deb files in ./app recursively:"
          find ./app -type f -name "*.deb"

      # 6️⃣ Find the first generated .deb file safely
      - name: Locate .deb file
        id: find_deb
        run: |
          DEB_FILE=$(find ./app/out/make/deb -type f -name "*.deb" | head -n 1)
          if [ -z "$DEB_FILE" ]; then
            echo "No .deb file found, exiting."
            exit 1
          fi
          echo "DEB_FILE=$DEB_FILE" >> $GITHUB_ENV
          echo "Found .deb file: $DEB_FILE"

      # 7️⃣ Read version from package.json
      - name: Get version from package.json
        id: get_version
        run: |
          VERSION=$(node -p "require('./app/package.json').version")
          VERSION_TAG="v$VERSION"
          echo "VERSION_TAG=$VERSION_TAG" >> $GITHUB_ENV
          echo "Version from package.json: $VERSION_TAG"

      # 8️⃣ Install GitHub CLI
      - name: Install GitHub CLI
        run: |
          sudo apt update
          sudo apt install -y gh

      # 9️⃣ Create a release in D-Flow-Releases and upload .deb
      - name: Publish release to D-Flow-Releases
        env:
          GH_TOKEN: ${{ secrets.GH_RELEASE_TOKEN }}
          DEB_FILE: ${{ env.DEB_FILE }}
          VERSION_TAG: ${{ env.VERSION_TAG }}
        run: |
          echo "Creating release $VERSION_TAG in D-Flow-Releases"
          gh release create "$VERSION_TAG" "$DEB_FILE" \
            --repo DRS-Group/D-Flow-Releases \
            --title "D-Flow $VERSION_TAG" \
            --notes "Automated release from workflow" \
            --target master
